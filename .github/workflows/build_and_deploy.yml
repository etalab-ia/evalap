name: Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  IMAGE_NAME: ghcr.io/${{ github.repository }}/evalap
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    # Skip if commit message starts with specific strings
    if: >
      !startsWith(github.event.head_commit.message, 'Update Readme') &&
      !startsWith(github.event.head_commit.message, 'Update Changelog') &&
      !startsWith(github.event.head_commit.message, 'Update package') &&
      !startsWith(github.event.head_commit.message, 'Update justfile') &&
      !startsWith(github.event.head_commit.message, 'Update notebook') &&
      !startsWith(github.event.head_commit.message, 'Add notebook') &&
      !startsWith(github.event.head_commit.message, 'CI skip') &&
      !startsWith(github.event.head_commit.message, 'skip CI')
    name: Build and push from ${{ github.ref_name }}/${{ github.sha }}
    outputs:
      commit_title: ${{ steps.get_head_commit_title.outputs.title }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - id: get_head_commit_title
        run: echo "title=$(git log --format=%B -n 1 HEAD | head -n 1)" >> $GITHUB_OUTPUT

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set sanitized_ref_name
        run: |
          ref_name=${{ github.ref_name }}
          sanitized_ref_name=${ref_name//\//_}
          echo sanitized_ref_name=${sanitized_ref_name} >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }},${{ env.IMAGE_NAME }}:${{env.sanitized_ref_name}}-latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
          platforms: linux/amd64,linux/arm64

  deploy:
    name: Deploy from ${{ github.ref_name }}/${{ github.sha }}
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Trigger dev deployment
        run: |
          RESPONSE="$(curl --request POST \
            --form token=${{ secrets.GITLAB_CI_TOKEN }} \
            --form ref=main \
            --form 'variables[pipeline_name]=${{ github.event.repository.name }} - ${{ needs.build-and-push.outputs.commit_title }}' \
            --form 'variables[docker_image_tag]=${{ env.IMAGE_TAG }}' \
            --form 'variables[application_to_deploy]=evalap' \
            --form 'variables[deployment_environment]=dev' \
            'https://gitlab.com/api/v4/projects/58117805/trigger/pipeline')"

          if echo "$RESPONSE" | grep -q '"status":"created"'; then
            echo $RESPONSE
          else
            echo $RESPONSE
            exit 1
          fi
