"""add dataset.columns

Revision ID: 0d299020f16a
Revises: 114ab6896a16
Create Date: 2024-12-14 19:23:16.657125

"""

from io import StringIO
import json
from typing import Sequence, Union

from alembic import op
import pandas as pd
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '0d299020f16a'
down_revision: Union[str, None] = '114ab6896a16'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('datasets', sa.Column('columns', sa.JSON(), nullable=True))
    op.add_column('datasets', sa.Column('created_at', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    # ### end Alembic commands ###

    # Set the columns value for existing dataset
    # --
    db = op.get_bind()
    result = db.execute(sa.text("SELECT id, df FROM datasets"))
    for row in result:
        df = pd.read_json(StringIO(row[1]))
        columns = list(df.columns)
        db.execute(
            sa.text("UPDATE datasets SET columns = :columns WHERE id = :id"),
            {"columns": json.dumps(columns), "id": row[0]}
        )

    # Update existing rows to set the created_at field to the current timestamp
    op.execute(
        sa.text("UPDATE datasets SET created_at = NOW() WHERE created_at IS NULL")
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('datasets', 'columns')
    op.drop_column('datasets', 'created_at')
    # ### end Alembic commands ###
