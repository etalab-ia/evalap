"""judge model relation

Revision ID: e2e82a623408
Revises: 2da85821482a
Create Date: 2025-08-02 01:06:46.623879

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "e2e82a623408"
down_revision: Union[str, None] = "2da85821482a"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("experiments", sa.Column("judge_model_id", sa.Integer(), nullable=True))

    # Update old judge_model values
    # --
    db = op.get_bind()
    # Get all experiments with judge_model
    experiments = db.execute(
        sa.text("""SELECT id, judge_model
                FROM experiments
                WHERE judge_model IS NOT NULL AND judge_model != ''
                """)
    )

    # Create a new model entry for EACH experiment
    for experiment_id, model_name in experiments:
        # Insert new model with name from judge_model and empty strings for required fields
        model_id = db.execute(
            sa.text("""INSERT INTO models (name, base_url, api_key, has_raw_output)
                    VALUES (:name, '', '', false)
                    RETURNING id
                    """),
            {"name": model_name},
        ).scalar()

        # Update this specific experiment to use the new model_id
        db.execute(
            sa.text("""UPDATE experiments
                    SET judge_model_id = :model_id
                    WHERE id = :experiment_id
                    """),
            {"model_id": model_id, "experiment_id": experiment_id},
        )

    op.create_foreign_key(None, "experiments", "models", ["judge_model_id"], ["id"])
    op.drop_column("experiments", "judge_model")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column("experiments", sa.Column("judge_model", sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint("experiments_judge_model_id_fkey", "experiments", type_="foreignkey")
    op.drop_column("experiments", "judge_model_id")
    # ### end Alembic commands ###
