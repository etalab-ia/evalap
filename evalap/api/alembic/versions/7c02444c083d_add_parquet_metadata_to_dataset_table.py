"""add parquet metadata to dataset table

Revision ID: 7c02444c083d
Revises: 4b903ee83b10
Create Date: 2025-05-02 15:56:35.404832

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7c02444c083d'
down_revision: Union[str, None] = '4b903ee83b10'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('datasets', sa.Column('parquet_path', sa.Text(), nullable=True))
    op.add_column('datasets', sa.Column('parquet_size', sa.Integer(), nullable=True))
    op.add_column('datasets', sa.Column('parquet_columns', sa.JSON(), nullable=True))
    op.add_column('datasets', sa.Column('parquet_byte_size', sa.Integer(), nullable=True))
    op.drop_column('datasets', 'has_query')
    # ### end Alembic commands ###

    op.execute(
        sa.text("UPDATE datasets SET parquet_size= 0 WHERE parquet_size IS NULL")
    )
    op.execute(
        sa.text("UPDATE datasets SET parquet_columns = '[]' WHERE parquet_columns IS NULL")
    )


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('datasets', sa.Column('has_query', sa.BOOLEAN(), autoincrement=False, nullable=True))
    op.drop_column('datasets', 'parquet_byte_size')
    op.drop_column('datasets', 'parquet_columns')
    op.drop_column('datasets', 'parquet_size')
    op.drop_column('datasets', 'parquet_path')
    # ### end Alembic commands ###
